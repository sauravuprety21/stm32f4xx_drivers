
st32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000b54  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000000c  08000d18  08000d18  00010d18  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000d24  08000d24  00010d2c  2**0
                  CONTENTS
  4 .ARM          00000000  08000d24  08000d24  00010d2c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000d24  08000d2c  00010d2c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000d24  08000d24  00010d24  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000d28  08000d28  00010d28  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010d2c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000028  20000000  08000d2c  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000028  08000d2c  00020028  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010d2c  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000124c  00000000  00000000  00010d5c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000046e  00000000  00000000  00011fa8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000118  00000000  00000000  00012418  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000e0  00000000  00000000  00012530  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000020c1  00000000  00000000  00012610  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001481  00000000  00000000  000146d1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000913e  00000000  00000000  00015b52  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0001ec90  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000384  00000000  00000000  0001ece0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08000d00 	.word	0x08000d00

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	08000d00 	.word	0x08000d00

08000204 <strlen>:
 8000204:	4603      	mov	r3, r0
 8000206:	f813 2b01 	ldrb.w	r2, [r3], #1
 800020a:	2a00      	cmp	r2, #0
 800020c:	d1fb      	bne.n	8000206 <strlen+0x2>
 800020e:	1a18      	subs	r0, r3, r0
 8000210:	3801      	subs	r0, #1
 8000212:	4770      	bx	lr

08000214 <main>:


SPI_Handle_t SPI2handle;

int main(void)
{
 8000214:	b580      	push	{r7, lr}
 8000216:	b084      	sub	sp, #16
 8000218:	af00      	add	r7, sp, #0

	char user_data[] = "Hello World";
 800021a:	4a0f      	ldr	r2, [pc, #60]	; (8000258 <main+0x44>)
 800021c:	1d3b      	adds	r3, r7, #4
 800021e:	ca07      	ldmia	r2, {r0, r1, r2}
 8000220:	e883 0007 	stmia.w	r3, {r0, r1, r2}

	SPI2_GPIOInits();
 8000224:	f000 f81c 	bl	8000260 <SPI2_GPIOInits>

	SPI2_Inits();
 8000228:	f000 f83c 	bl	80002a4 <SPI2_Inits>

	SPI_SSIConfig(&SPI2handle, ENABLE);
 800022c:	2101      	movs	r1, #1
 800022e:	480b      	ldr	r0, [pc, #44]	; (800025c <main+0x48>)
 8000230:	f000 fd26 	bl	8000c80 <SPI_SSIConfig>
	SPI_PeripheralControl(&SPI2handle, ENABLE);
 8000234:	2101      	movs	r1, #1
 8000236:	4809      	ldr	r0, [pc, #36]	; (800025c <main+0x48>)
 8000238:	f000 fd06 	bl	8000c48 <SPI_PeripheralControl>

	SPI_SendData(&SPI2handle, (uint8_t *)user_data, strlen(user_data));
 800023c:	1d3b      	adds	r3, r7, #4
 800023e:	4618      	mov	r0, r3
 8000240:	f7ff ffe0 	bl	8000204 <strlen>
 8000244:	4602      	mov	r2, r0
 8000246:	1d3b      	adds	r3, r7, #4
 8000248:	4619      	mov	r1, r3
 800024a:	4804      	ldr	r0, [pc, #16]	; (800025c <main+0x48>)
 800024c:	f000 fcc6 	bl	8000bdc <SPI_SendData>

	SPI_DeInit(&SPI2handle);
 8000250:	4802      	ldr	r0, [pc, #8]	; (800025c <main+0x48>)
 8000252:	f000 fc5f 	bl	8000b14 <SPI_DeInit>

	while(1);
 8000256:	e7fe      	b.n	8000256 <main+0x42>
 8000258:	08000d18 	.word	0x08000d18
 800025c:	2000001c 	.word	0x2000001c

08000260 <SPI2_GPIOInits>:
}



void SPI2_GPIOInits(void)
{
 8000260:	b580      	push	{r7, lr}
 8000262:	b084      	sub	sp, #16
 8000264:	af00      	add	r7, sp, #0
	GPIO_Handle_t SPI2_GPIOPin;

//  Generic SPI2 GPIO Pin
	SPI2_GPIOPin.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_ALTFN;
 8000266:	2302      	movs	r3, #2
 8000268:	727b      	strb	r3, [r7, #9]
	SPI2_GPIOPin.GPIO_PinConfig.GPIO_PinAltFunMode = GPIO_ALTFN_MOD_5;
 800026a:	2305      	movs	r3, #5
 800026c:	737b      	strb	r3, [r7, #13]
	SPI2_GPIOPin.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800026e:	2302      	movs	r3, #2
 8000270:	72bb      	strb	r3, [r7, #10]
	SPI2_GPIOPin.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000272:	2300      	movs	r3, #0
 8000274:	72fb      	strb	r3, [r7, #11]
	SPI2_GPIOPin.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYP_PP;
 8000276:	2300      	movs	r3, #0
 8000278:	733b      	strb	r3, [r7, #12]
	SPI2_GPIOPin.pGPIOx = GPIOC;
 800027a:	4b09      	ldr	r3, [pc, #36]	; (80002a0 <SPI2_GPIOInits+0x40>)
 800027c:	607b      	str	r3, [r7, #4]
////	SPI-2 MISO
//	SPI2_GPIOPin.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_2;
//	GPIO_Init(&SPI2_GPIOPin);

// 	SPI-2 MOSI
	SPI2_GPIOPin.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_3;
 800027e:	2303      	movs	r3, #3
 8000280:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPI2_GPIOPin);
 8000282:	1d3b      	adds	r3, r7, #4
 8000284:	4618      	mov	r0, r3
 8000286:	f000 f967 	bl	8000558 <GPIO_Init>

//	SPI-2 SCLK
	SPI2_GPIOPin.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_7;
 800028a:	2307      	movs	r3, #7
 800028c:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPI2_GPIOPin);
 800028e:	1d3b      	adds	r3, r7, #4
 8000290:	4618      	mov	r0, r3
 8000292:	f000 f961 	bl	8000558 <GPIO_Init>

//// 	SPI-2 NSS
//	SPI2_GPIOPin.pGPIOx = GPIOB;
//	SPI2_GPIOPin.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_9;
//	GPIO_Init(&SPI2_GPIOPin);
}
 8000296:	bf00      	nop
 8000298:	3710      	adds	r7, #16
 800029a:	46bd      	mov	sp, r7
 800029c:	bd80      	pop	{r7, pc}
 800029e:	bf00      	nop
 80002a0:	40020800 	.word	0x40020800

080002a4 <SPI2_Inits>:


void SPI2_Inits(void)
{
 80002a4:	b580      	push	{r7, lr}
 80002a6:	af00      	add	r7, sp, #0
	SPI2handle.pSPIx = SPI2;
 80002a8:	4b0e      	ldr	r3, [pc, #56]	; (80002e4 <SPI2_Inits+0x40>)
 80002aa:	4a0f      	ldr	r2, [pc, #60]	; (80002e8 <SPI2_Inits+0x44>)
 80002ac:	601a      	str	r2, [r3, #0]
	SPI2handle.SPIConfig.SPI_DeviceMode = SPI_DEVMOD_MSTR;
 80002ae:	4b0d      	ldr	r3, [pc, #52]	; (80002e4 <SPI2_Inits+0x40>)
 80002b0:	2201      	movs	r2, #1
 80002b2:	711a      	strb	r2, [r3, #4]
	SPI2handle.SPIConfig.SPI_BusConfig = SPI_BUSCFG_FD;
 80002b4:	4b0b      	ldr	r3, [pc, #44]	; (80002e4 <SPI2_Inits+0x40>)
 80002b6:	2201      	movs	r2, #1
 80002b8:	715a      	strb	r2, [r3, #5]
	SPI2handle.SPIConfig.SPI_SclkSpeed = SPI_SCLK_MIN;
 80002ba:	4b0a      	ldr	r3, [pc, #40]	; (80002e4 <SPI2_Inits+0x40>)
 80002bc:	2207      	movs	r2, #7
 80002be:	719a      	strb	r2, [r3, #6]
	SPI2handle.SPIConfig.SPI_DFF = SPI_DFF_8BITS;
 80002c0:	4b08      	ldr	r3, [pc, #32]	; (80002e4 <SPI2_Inits+0x40>)
 80002c2:	2200      	movs	r2, #0
 80002c4:	71da      	strb	r2, [r3, #7]
	SPI2handle.SPIConfig.SPI_CPHA = SPI_CPHA_LOW;
 80002c6:	4b07      	ldr	r3, [pc, #28]	; (80002e4 <SPI2_Inits+0x40>)
 80002c8:	2200      	movs	r2, #0
 80002ca:	721a      	strb	r2, [r3, #8]
	SPI2handle.SPIConfig.SPI_CPOL = SPI_CPOL_LOW;
 80002cc:	4b05      	ldr	r3, [pc, #20]	; (80002e4 <SPI2_Inits+0x40>)
 80002ce:	2200      	movs	r2, #0
 80002d0:	725a      	strb	r2, [r3, #9]
	SPI2handle.SPIConfig.SPI_SSM = SPI_SSM_EN;
 80002d2:	4b04      	ldr	r3, [pc, #16]	; (80002e4 <SPI2_Inits+0x40>)
 80002d4:	2201      	movs	r2, #1
 80002d6:	729a      	strb	r2, [r3, #10]
	SPI_Init(&SPI2handle);
 80002d8:	4802      	ldr	r0, [pc, #8]	; (80002e4 <SPI2_Inits+0x40>)
 80002da:	f000 fbb5 	bl	8000a48 <SPI_Init>
}
 80002de:	bf00      	nop
 80002e0:	bd80      	pop	{r7, pc}
 80002e2:	bf00      	nop
 80002e4:	2000001c 	.word	0x2000001c
 80002e8:	40003800 	.word	0x40003800

080002ec <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002ec:	480d      	ldr	r0, [pc, #52]	; (8000324 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002ee:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80002f0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002f4:	480c      	ldr	r0, [pc, #48]	; (8000328 <LoopForever+0x6>)
  ldr r1, =_edata
 80002f6:	490d      	ldr	r1, [pc, #52]	; (800032c <LoopForever+0xa>)
  ldr r2, =_sidata
 80002f8:	4a0d      	ldr	r2, [pc, #52]	; (8000330 <LoopForever+0xe>)
  movs r3, #0
 80002fa:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002fc:	e002      	b.n	8000304 <LoopCopyDataInit>

080002fe <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002fe:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000300:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000302:	3304      	adds	r3, #4

08000304 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000304:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000306:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000308:	d3f9      	bcc.n	80002fe <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800030a:	4a0a      	ldr	r2, [pc, #40]	; (8000334 <LoopForever+0x12>)
  ldr r4, =_ebss
 800030c:	4c0a      	ldr	r4, [pc, #40]	; (8000338 <LoopForever+0x16>)
  movs r3, #0
 800030e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000310:	e001      	b.n	8000316 <LoopFillZerobss>

08000312 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000312:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000314:	3204      	adds	r2, #4

08000316 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000316:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000318:	d3fb      	bcc.n	8000312 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800031a:	f000 fccd 	bl	8000cb8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800031e:	f7ff ff79 	bl	8000214 <main>

08000322 <LoopForever>:

LoopForever:
    b LoopForever
 8000322:	e7fe      	b.n	8000322 <LoopForever>
  ldr   r0, =_estack
 8000324:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000328:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800032c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000330:	08000d2c 	.word	0x08000d2c
  ldr r2, =_sbss
 8000334:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000338:	20000028 	.word	0x20000028

0800033c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800033c:	e7fe      	b.n	800033c <ADC_IRQHandler>
	...

08000340 <GPIO_PeriClockControl>:
 * @return								- void
 *
 * @Note								-
 */
void GPIO_PeriClockControl(GPIO_RegDef_t __vo *const pGPIOx, uint8_t const EnorDi)
{
 8000340:	b480      	push	{r7}
 8000342:	b085      	sub	sp, #20
 8000344:	af00      	add	r7, sp, #0
 8000346:	6078      	str	r0, [r7, #4]
 8000348:	460b      	mov	r3, r1
 800034a:	70fb      	strb	r3, [r7, #3]
	intptr_t GPIOPort = (intptr_t) pGPIOx;
 800034c:	687b      	ldr	r3, [r7, #4]
 800034e:	60fb      	str	r3, [r7, #12]

	if(EnorDi)
 8000350:	78fb      	ldrb	r3, [r7, #3]
 8000352:	2b00      	cmp	r3, #0
 8000354:	d076      	beq.n	8000444 <GPIO_PeriClockControl+0x104>
	{
		switch (GPIOPort)
 8000356:	68fb      	ldr	r3, [r7, #12]
 8000358:	4a76      	ldr	r2, [pc, #472]	; (8000534 <GPIO_PeriClockControl+0x1f4>)
 800035a:	4293      	cmp	r3, r2
 800035c:	d06b      	beq.n	8000436 <GPIO_PeriClockControl+0xf6>
 800035e:	68fb      	ldr	r3, [r7, #12]
 8000360:	4a74      	ldr	r2, [pc, #464]	; (8000534 <GPIO_PeriClockControl+0x1f4>)
 8000362:	4293      	cmp	r3, r2
 8000364:	f300 80df 	bgt.w	8000526 <GPIO_PeriClockControl+0x1e6>
 8000368:	68fb      	ldr	r3, [r7, #12]
 800036a:	4a73      	ldr	r2, [pc, #460]	; (8000538 <GPIO_PeriClockControl+0x1f8>)
 800036c:	4293      	cmp	r3, r2
 800036e:	d05b      	beq.n	8000428 <GPIO_PeriClockControl+0xe8>
 8000370:	68fb      	ldr	r3, [r7, #12]
 8000372:	4a71      	ldr	r2, [pc, #452]	; (8000538 <GPIO_PeriClockControl+0x1f8>)
 8000374:	4293      	cmp	r3, r2
 8000376:	f300 80d6 	bgt.w	8000526 <GPIO_PeriClockControl+0x1e6>
 800037a:	68fb      	ldr	r3, [r7, #12]
 800037c:	4a6f      	ldr	r2, [pc, #444]	; (800053c <GPIO_PeriClockControl+0x1fc>)
 800037e:	4293      	cmp	r3, r2
 8000380:	d04b      	beq.n	800041a <GPIO_PeriClockControl+0xda>
 8000382:	68fb      	ldr	r3, [r7, #12]
 8000384:	4a6d      	ldr	r2, [pc, #436]	; (800053c <GPIO_PeriClockControl+0x1fc>)
 8000386:	4293      	cmp	r3, r2
 8000388:	f300 80cd 	bgt.w	8000526 <GPIO_PeriClockControl+0x1e6>
 800038c:	68fb      	ldr	r3, [r7, #12]
 800038e:	4a6c      	ldr	r2, [pc, #432]	; (8000540 <GPIO_PeriClockControl+0x200>)
 8000390:	4293      	cmp	r3, r2
 8000392:	d03b      	beq.n	800040c <GPIO_PeriClockControl+0xcc>
 8000394:	68fb      	ldr	r3, [r7, #12]
 8000396:	4a6a      	ldr	r2, [pc, #424]	; (8000540 <GPIO_PeriClockControl+0x200>)
 8000398:	4293      	cmp	r3, r2
 800039a:	f300 80c4 	bgt.w	8000526 <GPIO_PeriClockControl+0x1e6>
 800039e:	68fb      	ldr	r3, [r7, #12]
 80003a0:	4a68      	ldr	r2, [pc, #416]	; (8000544 <GPIO_PeriClockControl+0x204>)
 80003a2:	4293      	cmp	r3, r2
 80003a4:	d02b      	beq.n	80003fe <GPIO_PeriClockControl+0xbe>
 80003a6:	68fb      	ldr	r3, [r7, #12]
 80003a8:	4a66      	ldr	r2, [pc, #408]	; (8000544 <GPIO_PeriClockControl+0x204>)
 80003aa:	4293      	cmp	r3, r2
 80003ac:	f300 80bb 	bgt.w	8000526 <GPIO_PeriClockControl+0x1e6>
 80003b0:	68fb      	ldr	r3, [r7, #12]
 80003b2:	4a65      	ldr	r2, [pc, #404]	; (8000548 <GPIO_PeriClockControl+0x208>)
 80003b4:	4293      	cmp	r3, r2
 80003b6:	d01b      	beq.n	80003f0 <GPIO_PeriClockControl+0xb0>
 80003b8:	68fb      	ldr	r3, [r7, #12]
 80003ba:	4a63      	ldr	r2, [pc, #396]	; (8000548 <GPIO_PeriClockControl+0x208>)
 80003bc:	4293      	cmp	r3, r2
 80003be:	f300 80b2 	bgt.w	8000526 <GPIO_PeriClockControl+0x1e6>
 80003c2:	68fb      	ldr	r3, [r7, #12]
 80003c4:	4a61      	ldr	r2, [pc, #388]	; (800054c <GPIO_PeriClockControl+0x20c>)
 80003c6:	4293      	cmp	r3, r2
 80003c8:	d004      	beq.n	80003d4 <GPIO_PeriClockControl+0x94>
 80003ca:	68fb      	ldr	r3, [r7, #12]
 80003cc:	4a60      	ldr	r2, [pc, #384]	; (8000550 <GPIO_PeriClockControl+0x210>)
 80003ce:	4293      	cmp	r3, r2
 80003d0:	d007      	beq.n	80003e2 <GPIO_PeriClockControl+0xa2>
			case (GPIOH_BASEADDR):
				GPIOH_PCLK_DI();
				break;
		}
	}
}
 80003d2:	e0a8      	b.n	8000526 <GPIO_PeriClockControl+0x1e6>
				GPIOA_PCLK_EN();
 80003d4:	4b5f      	ldr	r3, [pc, #380]	; (8000554 <GPIO_PeriClockControl+0x214>)
 80003d6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003d8:	4a5e      	ldr	r2, [pc, #376]	; (8000554 <GPIO_PeriClockControl+0x214>)
 80003da:	f043 0301 	orr.w	r3, r3, #1
 80003de:	6313      	str	r3, [r2, #48]	; 0x30
				break;
 80003e0:	e0a1      	b.n	8000526 <GPIO_PeriClockControl+0x1e6>
				GPIOB_PCLK_EN();
 80003e2:	4b5c      	ldr	r3, [pc, #368]	; (8000554 <GPIO_PeriClockControl+0x214>)
 80003e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003e6:	4a5b      	ldr	r2, [pc, #364]	; (8000554 <GPIO_PeriClockControl+0x214>)
 80003e8:	f043 0302 	orr.w	r3, r3, #2
 80003ec:	6313      	str	r3, [r2, #48]	; 0x30
				break;
 80003ee:	e09a      	b.n	8000526 <GPIO_PeriClockControl+0x1e6>
				GPIOC_PCLK_EN();
 80003f0:	4b58      	ldr	r3, [pc, #352]	; (8000554 <GPIO_PeriClockControl+0x214>)
 80003f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003f4:	4a57      	ldr	r2, [pc, #348]	; (8000554 <GPIO_PeriClockControl+0x214>)
 80003f6:	f043 0304 	orr.w	r3, r3, #4
 80003fa:	6313      	str	r3, [r2, #48]	; 0x30
				break;
 80003fc:	e093      	b.n	8000526 <GPIO_PeriClockControl+0x1e6>
				GPIOD_PCLK_EN();
 80003fe:	4b55      	ldr	r3, [pc, #340]	; (8000554 <GPIO_PeriClockControl+0x214>)
 8000400:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000402:	4a54      	ldr	r2, [pc, #336]	; (8000554 <GPIO_PeriClockControl+0x214>)
 8000404:	f043 0308 	orr.w	r3, r3, #8
 8000408:	6313      	str	r3, [r2, #48]	; 0x30
				break;
 800040a:	e08c      	b.n	8000526 <GPIO_PeriClockControl+0x1e6>
				GPIOE_PCLK_EN();
 800040c:	4b51      	ldr	r3, [pc, #324]	; (8000554 <GPIO_PeriClockControl+0x214>)
 800040e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000410:	4a50      	ldr	r2, [pc, #320]	; (8000554 <GPIO_PeriClockControl+0x214>)
 8000412:	f043 0310 	orr.w	r3, r3, #16
 8000416:	6313      	str	r3, [r2, #48]	; 0x30
				break;
 8000418:	e085      	b.n	8000526 <GPIO_PeriClockControl+0x1e6>
				GPIOF_PCLK_EN();
 800041a:	4b4e      	ldr	r3, [pc, #312]	; (8000554 <GPIO_PeriClockControl+0x214>)
 800041c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800041e:	4a4d      	ldr	r2, [pc, #308]	; (8000554 <GPIO_PeriClockControl+0x214>)
 8000420:	f043 0320 	orr.w	r3, r3, #32
 8000424:	6313      	str	r3, [r2, #48]	; 0x30
				break;
 8000426:	e07e      	b.n	8000526 <GPIO_PeriClockControl+0x1e6>
				GPIOG_PCLK_EN();
 8000428:	4b4a      	ldr	r3, [pc, #296]	; (8000554 <GPIO_PeriClockControl+0x214>)
 800042a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800042c:	4a49      	ldr	r2, [pc, #292]	; (8000554 <GPIO_PeriClockControl+0x214>)
 800042e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000432:	6313      	str	r3, [r2, #48]	; 0x30
				break;
 8000434:	e077      	b.n	8000526 <GPIO_PeriClockControl+0x1e6>
				GPIOH_PCLK_EN();
 8000436:	4b47      	ldr	r3, [pc, #284]	; (8000554 <GPIO_PeriClockControl+0x214>)
 8000438:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800043a:	4a46      	ldr	r2, [pc, #280]	; (8000554 <GPIO_PeriClockControl+0x214>)
 800043c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000440:	6313      	str	r3, [r2, #48]	; 0x30
				break;
 8000442:	e070      	b.n	8000526 <GPIO_PeriClockControl+0x1e6>
		switch (GPIOPort)
 8000444:	68fb      	ldr	r3, [r7, #12]
 8000446:	4a3b      	ldr	r2, [pc, #236]	; (8000534 <GPIO_PeriClockControl+0x1f4>)
 8000448:	4293      	cmp	r3, r2
 800044a:	d065      	beq.n	8000518 <GPIO_PeriClockControl+0x1d8>
 800044c:	68fb      	ldr	r3, [r7, #12]
 800044e:	4a39      	ldr	r2, [pc, #228]	; (8000534 <GPIO_PeriClockControl+0x1f4>)
 8000450:	4293      	cmp	r3, r2
 8000452:	dc68      	bgt.n	8000526 <GPIO_PeriClockControl+0x1e6>
 8000454:	68fb      	ldr	r3, [r7, #12]
 8000456:	4a38      	ldr	r2, [pc, #224]	; (8000538 <GPIO_PeriClockControl+0x1f8>)
 8000458:	4293      	cmp	r3, r2
 800045a:	d056      	beq.n	800050a <GPIO_PeriClockControl+0x1ca>
 800045c:	68fb      	ldr	r3, [r7, #12]
 800045e:	4a36      	ldr	r2, [pc, #216]	; (8000538 <GPIO_PeriClockControl+0x1f8>)
 8000460:	4293      	cmp	r3, r2
 8000462:	dc60      	bgt.n	8000526 <GPIO_PeriClockControl+0x1e6>
 8000464:	68fb      	ldr	r3, [r7, #12]
 8000466:	4a35      	ldr	r2, [pc, #212]	; (800053c <GPIO_PeriClockControl+0x1fc>)
 8000468:	4293      	cmp	r3, r2
 800046a:	d047      	beq.n	80004fc <GPIO_PeriClockControl+0x1bc>
 800046c:	68fb      	ldr	r3, [r7, #12]
 800046e:	4a33      	ldr	r2, [pc, #204]	; (800053c <GPIO_PeriClockControl+0x1fc>)
 8000470:	4293      	cmp	r3, r2
 8000472:	dc58      	bgt.n	8000526 <GPIO_PeriClockControl+0x1e6>
 8000474:	68fb      	ldr	r3, [r7, #12]
 8000476:	4a32      	ldr	r2, [pc, #200]	; (8000540 <GPIO_PeriClockControl+0x200>)
 8000478:	4293      	cmp	r3, r2
 800047a:	d038      	beq.n	80004ee <GPIO_PeriClockControl+0x1ae>
 800047c:	68fb      	ldr	r3, [r7, #12]
 800047e:	4a30      	ldr	r2, [pc, #192]	; (8000540 <GPIO_PeriClockControl+0x200>)
 8000480:	4293      	cmp	r3, r2
 8000482:	dc50      	bgt.n	8000526 <GPIO_PeriClockControl+0x1e6>
 8000484:	68fb      	ldr	r3, [r7, #12]
 8000486:	4a2f      	ldr	r2, [pc, #188]	; (8000544 <GPIO_PeriClockControl+0x204>)
 8000488:	4293      	cmp	r3, r2
 800048a:	d029      	beq.n	80004e0 <GPIO_PeriClockControl+0x1a0>
 800048c:	68fb      	ldr	r3, [r7, #12]
 800048e:	4a2d      	ldr	r2, [pc, #180]	; (8000544 <GPIO_PeriClockControl+0x204>)
 8000490:	4293      	cmp	r3, r2
 8000492:	dc48      	bgt.n	8000526 <GPIO_PeriClockControl+0x1e6>
 8000494:	68fb      	ldr	r3, [r7, #12]
 8000496:	4a2c      	ldr	r2, [pc, #176]	; (8000548 <GPIO_PeriClockControl+0x208>)
 8000498:	4293      	cmp	r3, r2
 800049a:	d01a      	beq.n	80004d2 <GPIO_PeriClockControl+0x192>
 800049c:	68fb      	ldr	r3, [r7, #12]
 800049e:	4a2a      	ldr	r2, [pc, #168]	; (8000548 <GPIO_PeriClockControl+0x208>)
 80004a0:	4293      	cmp	r3, r2
 80004a2:	dc40      	bgt.n	8000526 <GPIO_PeriClockControl+0x1e6>
 80004a4:	68fb      	ldr	r3, [r7, #12]
 80004a6:	4a29      	ldr	r2, [pc, #164]	; (800054c <GPIO_PeriClockControl+0x20c>)
 80004a8:	4293      	cmp	r3, r2
 80004aa:	d004      	beq.n	80004b6 <GPIO_PeriClockControl+0x176>
 80004ac:	68fb      	ldr	r3, [r7, #12]
 80004ae:	4a28      	ldr	r2, [pc, #160]	; (8000550 <GPIO_PeriClockControl+0x210>)
 80004b0:	4293      	cmp	r3, r2
 80004b2:	d007      	beq.n	80004c4 <GPIO_PeriClockControl+0x184>
}
 80004b4:	e037      	b.n	8000526 <GPIO_PeriClockControl+0x1e6>
				GPIOA_PCLK_DI();
 80004b6:	4b27      	ldr	r3, [pc, #156]	; (8000554 <GPIO_PeriClockControl+0x214>)
 80004b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004ba:	4a26      	ldr	r2, [pc, #152]	; (8000554 <GPIO_PeriClockControl+0x214>)
 80004bc:	f023 0301 	bic.w	r3, r3, #1
 80004c0:	6313      	str	r3, [r2, #48]	; 0x30
				break;
 80004c2:	e030      	b.n	8000526 <GPIO_PeriClockControl+0x1e6>
				GPIOB_PCLK_DI();
 80004c4:	4b23      	ldr	r3, [pc, #140]	; (8000554 <GPIO_PeriClockControl+0x214>)
 80004c6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004c8:	4a22      	ldr	r2, [pc, #136]	; (8000554 <GPIO_PeriClockControl+0x214>)
 80004ca:	f023 0302 	bic.w	r3, r3, #2
 80004ce:	6313      	str	r3, [r2, #48]	; 0x30
				break;
 80004d0:	e029      	b.n	8000526 <GPIO_PeriClockControl+0x1e6>
				GPIOC_PCLK_DI();
 80004d2:	4b20      	ldr	r3, [pc, #128]	; (8000554 <GPIO_PeriClockControl+0x214>)
 80004d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004d6:	4a1f      	ldr	r2, [pc, #124]	; (8000554 <GPIO_PeriClockControl+0x214>)
 80004d8:	f023 0304 	bic.w	r3, r3, #4
 80004dc:	6313      	str	r3, [r2, #48]	; 0x30
				break;
 80004de:	e022      	b.n	8000526 <GPIO_PeriClockControl+0x1e6>
				GPIOD_PCLK_DI();
 80004e0:	4b1c      	ldr	r3, [pc, #112]	; (8000554 <GPIO_PeriClockControl+0x214>)
 80004e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004e4:	4a1b      	ldr	r2, [pc, #108]	; (8000554 <GPIO_PeriClockControl+0x214>)
 80004e6:	f023 0308 	bic.w	r3, r3, #8
 80004ea:	6313      	str	r3, [r2, #48]	; 0x30
				break;
 80004ec:	e01b      	b.n	8000526 <GPIO_PeriClockControl+0x1e6>
				GPIOE_PCLK_DI();
 80004ee:	4b19      	ldr	r3, [pc, #100]	; (8000554 <GPIO_PeriClockControl+0x214>)
 80004f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004f2:	4a18      	ldr	r2, [pc, #96]	; (8000554 <GPIO_PeriClockControl+0x214>)
 80004f4:	f023 0310 	bic.w	r3, r3, #16
 80004f8:	6313      	str	r3, [r2, #48]	; 0x30
				break;
 80004fa:	e014      	b.n	8000526 <GPIO_PeriClockControl+0x1e6>
				GPIOF_PCLK_DI();
 80004fc:	4b15      	ldr	r3, [pc, #84]	; (8000554 <GPIO_PeriClockControl+0x214>)
 80004fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000500:	4a14      	ldr	r2, [pc, #80]	; (8000554 <GPIO_PeriClockControl+0x214>)
 8000502:	f023 0320 	bic.w	r3, r3, #32
 8000506:	6313      	str	r3, [r2, #48]	; 0x30
				break;
 8000508:	e00d      	b.n	8000526 <GPIO_PeriClockControl+0x1e6>
				GPIOG_PCLK_DI();
 800050a:	4b12      	ldr	r3, [pc, #72]	; (8000554 <GPIO_PeriClockControl+0x214>)
 800050c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800050e:	4a11      	ldr	r2, [pc, #68]	; (8000554 <GPIO_PeriClockControl+0x214>)
 8000510:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000514:	6313      	str	r3, [r2, #48]	; 0x30
				break;
 8000516:	e006      	b.n	8000526 <GPIO_PeriClockControl+0x1e6>
				GPIOH_PCLK_DI();
 8000518:	4b0e      	ldr	r3, [pc, #56]	; (8000554 <GPIO_PeriClockControl+0x214>)
 800051a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800051c:	4a0d      	ldr	r2, [pc, #52]	; (8000554 <GPIO_PeriClockControl+0x214>)
 800051e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000522:	6313      	str	r3, [r2, #48]	; 0x30
				break;
 8000524:	bf00      	nop
}
 8000526:	bf00      	nop
 8000528:	3714      	adds	r7, #20
 800052a:	46bd      	mov	sp, r7
 800052c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000530:	4770      	bx	lr
 8000532:	bf00      	nop
 8000534:	40021c00 	.word	0x40021c00
 8000538:	40021800 	.word	0x40021800
 800053c:	40021400 	.word	0x40021400
 8000540:	40021000 	.word	0x40021000
 8000544:	40020c00 	.word	0x40020c00
 8000548:	40020800 	.word	0x40020800
 800054c:	40020000 	.word	0x40020000
 8000550:	40020400 	.word	0x40020400
 8000554:	40023800 	.word	0x40023800

08000558 <GPIO_Init>:
 *
 * @return								- void
 * @Note								-
 */
void GPIO_Init(GPIO_Handle_t __vo *const pGPIOHandle)
{
 8000558:	b580      	push	{r7, lr}
 800055a:	b088      	sub	sp, #32
 800055c:	af00      	add	r7, sp, #0
 800055e:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0;
 8000560:	2300      	movs	r3, #0
 8000562:	61bb      	str	r3, [r7, #24]

	// Enable GPIO port clock
	GPIO_PeriClockControl(pGPIOHandle->pGPIOx, ENABLE);
 8000564:	687b      	ldr	r3, [r7, #4]
 8000566:	681b      	ldr	r3, [r3, #0]
 8000568:	2101      	movs	r1, #1
 800056a:	4618      	mov	r0, r3
 800056c:	f7ff fee8 	bl	8000340 <GPIO_PeriClockControl>

	// Configure GPIO mode (non-interrupt)
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANLG)
 8000570:	687b      	ldr	r3, [r7, #4]
 8000572:	795b      	ldrb	r3, [r3, #5]
 8000574:	b2db      	uxtb	r3, r3
 8000576:	2b03      	cmp	r3, #3
 8000578:	d820      	bhi.n	80005bc <GPIO_Init+0x64>
	{
		temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800057a:	687b      	ldr	r3, [r7, #4]
 800057c:	795b      	ldrb	r3, [r3, #5]
 800057e:	b2db      	uxtb	r3, r3
 8000580:	461a      	mov	r2, r3
 8000582:	687b      	ldr	r3, [r7, #4]
 8000584:	791b      	ldrb	r3, [r3, #4]
 8000586:	b2db      	uxtb	r3, r3
 8000588:	005b      	lsls	r3, r3, #1
 800058a:	fa02 f303 	lsl.w	r3, r2, r3
 800058e:	61bb      	str	r3, [r7, #24]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000590:	687b      	ldr	r3, [r7, #4]
 8000592:	791b      	ldrb	r3, [r3, #4]
 8000594:	b2db      	uxtb	r3, r3
 8000596:	005b      	lsls	r3, r3, #1
 8000598:	2203      	movs	r2, #3
 800059a:	fa02 f303 	lsl.w	r3, r2, r3
 800059e:	43d9      	mvns	r1, r3
 80005a0:	687b      	ldr	r3, [r7, #4]
 80005a2:	681b      	ldr	r3, [r3, #0]
 80005a4:	681a      	ldr	r2, [r3, #0]
 80005a6:	400a      	ands	r2, r1
 80005a8:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 80005aa:	687b      	ldr	r3, [r7, #4]
 80005ac:	681b      	ldr	r3, [r3, #0]
 80005ae:	6819      	ldr	r1, [r3, #0]
 80005b0:	69ba      	ldr	r2, [r7, #24]
 80005b2:	430a      	orrs	r2, r1
 80005b4:	601a      	str	r2, [r3, #0]
		temp = 0;
 80005b6:	2300      	movs	r3, #0
 80005b8:	61bb      	str	r3, [r7, #24]
 80005ba:	e105      	b.n	80007c8 <GPIO_Init+0x270>
	} else
	{
		// Configure interrupt mode
		switch(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode)
 80005bc:	687b      	ldr	r3, [r7, #4]
 80005be:	795b      	ldrb	r3, [r3, #5]
 80005c0:	b2db      	uxtb	r3, r3
 80005c2:	2b06      	cmp	r3, #6
 80005c4:	d03c      	beq.n	8000640 <GPIO_Init+0xe8>
 80005c6:	2b06      	cmp	r3, #6
 80005c8:	dc55      	bgt.n	8000676 <GPIO_Init+0x11e>
 80005ca:	2b04      	cmp	r3, #4
 80005cc:	d002      	beq.n	80005d4 <GPIO_Init+0x7c>
 80005ce:	2b05      	cmp	r3, #5
 80005d0:	d01b      	beq.n	800060a <GPIO_Init+0xb2>
 80005d2:	e050      	b.n	8000676 <GPIO_Init+0x11e>
		{
			case GPIO_MODE_IT_FT: 		// configure FTSR
				EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005d4:	687b      	ldr	r3, [r7, #4]
 80005d6:	791b      	ldrb	r3, [r3, #4]
 80005d8:	b2db      	uxtb	r3, r3
 80005da:	461a      	mov	r2, r3
 80005dc:	2301      	movs	r3, #1
 80005de:	fa03 f202 	lsl.w	r2, r3, r2
 80005e2:	4b54      	ldr	r3, [pc, #336]	; (8000734 <GPIO_Init+0x1dc>)
 80005e4:	68db      	ldr	r3, [r3, #12]
 80005e6:	4611      	mov	r1, r2
 80005e8:	4a52      	ldr	r2, [pc, #328]	; (8000734 <GPIO_Init+0x1dc>)
 80005ea:	430b      	orrs	r3, r1
 80005ec:	60d3      	str	r3, [r2, #12]
				EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005ee:	687b      	ldr	r3, [r7, #4]
 80005f0:	791b      	ldrb	r3, [r3, #4]
 80005f2:	b2db      	uxtb	r3, r3
 80005f4:	461a      	mov	r2, r3
 80005f6:	2301      	movs	r3, #1
 80005f8:	4093      	lsls	r3, r2
 80005fa:	43da      	mvns	r2, r3
 80005fc:	4b4d      	ldr	r3, [pc, #308]	; (8000734 <GPIO_Init+0x1dc>)
 80005fe:	689b      	ldr	r3, [r3, #8]
 8000600:	4611      	mov	r1, r2
 8000602:	4a4c      	ldr	r2, [pc, #304]	; (8000734 <GPIO_Init+0x1dc>)
 8000604:	400b      	ands	r3, r1
 8000606:	6093      	str	r3, [r2, #8]
				break;
 8000608:	e035      	b.n	8000676 <GPIO_Init+0x11e>

			case GPIO_MODE_IT_RT:		// configure RTSR
				EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800060a:	687b      	ldr	r3, [r7, #4]
 800060c:	791b      	ldrb	r3, [r3, #4]
 800060e:	b2db      	uxtb	r3, r3
 8000610:	461a      	mov	r2, r3
 8000612:	2301      	movs	r3, #1
 8000614:	fa03 f202 	lsl.w	r2, r3, r2
 8000618:	4b46      	ldr	r3, [pc, #280]	; (8000734 <GPIO_Init+0x1dc>)
 800061a:	689b      	ldr	r3, [r3, #8]
 800061c:	4611      	mov	r1, r2
 800061e:	4a45      	ldr	r2, [pc, #276]	; (8000734 <GPIO_Init+0x1dc>)
 8000620:	430b      	orrs	r3, r1
 8000622:	6093      	str	r3, [r2, #8]
				EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000624:	687b      	ldr	r3, [r7, #4]
 8000626:	791b      	ldrb	r3, [r3, #4]
 8000628:	b2db      	uxtb	r3, r3
 800062a:	461a      	mov	r2, r3
 800062c:	2301      	movs	r3, #1
 800062e:	4093      	lsls	r3, r2
 8000630:	43da      	mvns	r2, r3
 8000632:	4b40      	ldr	r3, [pc, #256]	; (8000734 <GPIO_Init+0x1dc>)
 8000634:	68db      	ldr	r3, [r3, #12]
 8000636:	4611      	mov	r1, r2
 8000638:	4a3e      	ldr	r2, [pc, #248]	; (8000734 <GPIO_Init+0x1dc>)
 800063a:	400b      	ands	r3, r1
 800063c:	60d3      	str	r3, [r2, #12]
				break;
 800063e:	e01a      	b.n	8000676 <GPIO_Init+0x11e>

			case GPIO_MODE_IT_RFT:		// configure both
				EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000640:	687b      	ldr	r3, [r7, #4]
 8000642:	791b      	ldrb	r3, [r3, #4]
 8000644:	b2db      	uxtb	r3, r3
 8000646:	461a      	mov	r2, r3
 8000648:	2301      	movs	r3, #1
 800064a:	fa03 f202 	lsl.w	r2, r3, r2
 800064e:	4b39      	ldr	r3, [pc, #228]	; (8000734 <GPIO_Init+0x1dc>)
 8000650:	68db      	ldr	r3, [r3, #12]
 8000652:	4611      	mov	r1, r2
 8000654:	4a37      	ldr	r2, [pc, #220]	; (8000734 <GPIO_Init+0x1dc>)
 8000656:	430b      	orrs	r3, r1
 8000658:	60d3      	str	r3, [r2, #12]
				EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800065a:	687b      	ldr	r3, [r7, #4]
 800065c:	791b      	ldrb	r3, [r3, #4]
 800065e:	b2db      	uxtb	r3, r3
 8000660:	461a      	mov	r2, r3
 8000662:	2301      	movs	r3, #1
 8000664:	fa03 f202 	lsl.w	r2, r3, r2
 8000668:	4b32      	ldr	r3, [pc, #200]	; (8000734 <GPIO_Init+0x1dc>)
 800066a:	689b      	ldr	r3, [r3, #8]
 800066c:	4611      	mov	r1, r2
 800066e:	4a31      	ldr	r2, [pc, #196]	; (8000734 <GPIO_Init+0x1dc>)
 8000670:	430b      	orrs	r3, r1
 8000672:	6093      	str	r3, [r2, #8]
				break;
 8000674:	bf00      	nop
		}
		uint8_t temp1, temp2, portCode;
		intptr_t GPIOPort;

		temp1 = (uint8_t) pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 8000676:	687b      	ldr	r3, [r7, #4]
 8000678:	791b      	ldrb	r3, [r3, #4]
 800067a:	b2db      	uxtb	r3, r3
 800067c:	089b      	lsrs	r3, r3, #2
 800067e:	75fb      	strb	r3, [r7, #23]
		temp2 = (uint8_t) pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 8000680:	687b      	ldr	r3, [r7, #4]
 8000682:	791b      	ldrb	r3, [r3, #4]
 8000684:	b2db      	uxtb	r3, r3
 8000686:	f003 0303 	and.w	r3, r3, #3
 800068a:	75bb      	strb	r3, [r7, #22]
		GPIOPort = (intptr_t) pGPIOHandle->pGPIOx;
 800068c:	687b      	ldr	r3, [r7, #4]
 800068e:	681b      	ldr	r3, [r3, #0]
 8000690:	613b      	str	r3, [r7, #16]

		switch (GPIOPort)
 8000692:	693b      	ldr	r3, [r7, #16]
 8000694:	4a28      	ldr	r2, [pc, #160]	; (8000738 <GPIO_Init+0x1e0>)
 8000696:	4293      	cmp	r3, r2
 8000698:	d049      	beq.n	800072e <GPIO_Init+0x1d6>
 800069a:	693b      	ldr	r3, [r7, #16]
 800069c:	4a26      	ldr	r2, [pc, #152]	; (8000738 <GPIO_Init+0x1e0>)
 800069e:	4293      	cmp	r3, r2
 80006a0:	dc5a      	bgt.n	8000758 <GPIO_Init+0x200>
 80006a2:	693b      	ldr	r3, [r7, #16]
 80006a4:	4a25      	ldr	r2, [pc, #148]	; (800073c <GPIO_Init+0x1e4>)
 80006a6:	4293      	cmp	r3, r2
 80006a8:	d03e      	beq.n	8000728 <GPIO_Init+0x1d0>
 80006aa:	693b      	ldr	r3, [r7, #16]
 80006ac:	4a23      	ldr	r2, [pc, #140]	; (800073c <GPIO_Init+0x1e4>)
 80006ae:	4293      	cmp	r3, r2
 80006b0:	dc52      	bgt.n	8000758 <GPIO_Init+0x200>
 80006b2:	693b      	ldr	r3, [r7, #16]
 80006b4:	4a22      	ldr	r2, [pc, #136]	; (8000740 <GPIO_Init+0x1e8>)
 80006b6:	4293      	cmp	r3, r2
 80006b8:	d033      	beq.n	8000722 <GPIO_Init+0x1ca>
 80006ba:	693b      	ldr	r3, [r7, #16]
 80006bc:	4a20      	ldr	r2, [pc, #128]	; (8000740 <GPIO_Init+0x1e8>)
 80006be:	4293      	cmp	r3, r2
 80006c0:	dc4a      	bgt.n	8000758 <GPIO_Init+0x200>
 80006c2:	693b      	ldr	r3, [r7, #16]
 80006c4:	4a1f      	ldr	r2, [pc, #124]	; (8000744 <GPIO_Init+0x1ec>)
 80006c6:	4293      	cmp	r3, r2
 80006c8:	d028      	beq.n	800071c <GPIO_Init+0x1c4>
 80006ca:	693b      	ldr	r3, [r7, #16]
 80006cc:	4a1d      	ldr	r2, [pc, #116]	; (8000744 <GPIO_Init+0x1ec>)
 80006ce:	4293      	cmp	r3, r2
 80006d0:	dc42      	bgt.n	8000758 <GPIO_Init+0x200>
 80006d2:	693b      	ldr	r3, [r7, #16]
 80006d4:	4a1c      	ldr	r2, [pc, #112]	; (8000748 <GPIO_Init+0x1f0>)
 80006d6:	4293      	cmp	r3, r2
 80006d8:	d01d      	beq.n	8000716 <GPIO_Init+0x1be>
 80006da:	693b      	ldr	r3, [r7, #16]
 80006dc:	4a1a      	ldr	r2, [pc, #104]	; (8000748 <GPIO_Init+0x1f0>)
 80006de:	4293      	cmp	r3, r2
 80006e0:	dc3a      	bgt.n	8000758 <GPIO_Init+0x200>
 80006e2:	693b      	ldr	r3, [r7, #16]
 80006e4:	4a19      	ldr	r2, [pc, #100]	; (800074c <GPIO_Init+0x1f4>)
 80006e6:	4293      	cmp	r3, r2
 80006e8:	d012      	beq.n	8000710 <GPIO_Init+0x1b8>
 80006ea:	693b      	ldr	r3, [r7, #16]
 80006ec:	4a17      	ldr	r2, [pc, #92]	; (800074c <GPIO_Init+0x1f4>)
 80006ee:	4293      	cmp	r3, r2
 80006f0:	dc32      	bgt.n	8000758 <GPIO_Init+0x200>
 80006f2:	693b      	ldr	r3, [r7, #16]
 80006f4:	4a16      	ldr	r2, [pc, #88]	; (8000750 <GPIO_Init+0x1f8>)
 80006f6:	4293      	cmp	r3, r2
 80006f8:	d004      	beq.n	8000704 <GPIO_Init+0x1ac>
 80006fa:	693b      	ldr	r3, [r7, #16]
 80006fc:	4a15      	ldr	r2, [pc, #84]	; (8000754 <GPIO_Init+0x1fc>)
 80006fe:	4293      	cmp	r3, r2
 8000700:	d003      	beq.n	800070a <GPIO_Init+0x1b2>
 8000702:	e029      	b.n	8000758 <GPIO_Init+0x200>
		{
			case GPIOA_BASEADDR:
				portCode = 0;
 8000704:	2300      	movs	r3, #0
 8000706:	77fb      	strb	r3, [r7, #31]
				break;
 8000708:	e028      	b.n	800075c <GPIO_Init+0x204>
			case GPIOB_BASEADDR:
				portCode = 1;
 800070a:	2301      	movs	r3, #1
 800070c:	77fb      	strb	r3, [r7, #31]
				break;
 800070e:	e025      	b.n	800075c <GPIO_Init+0x204>
			case GPIOC_BASEADDR:
				portCode = 2;
 8000710:	2302      	movs	r3, #2
 8000712:	77fb      	strb	r3, [r7, #31]
				break;
 8000714:	e022      	b.n	800075c <GPIO_Init+0x204>
			case GPIOD_BASEADDR:
				portCode = 3;
 8000716:	2303      	movs	r3, #3
 8000718:	77fb      	strb	r3, [r7, #31]
				break;
 800071a:	e01f      	b.n	800075c <GPIO_Init+0x204>
			case GPIOE_BASEADDR:
				portCode = 4;
 800071c:	2304      	movs	r3, #4
 800071e:	77fb      	strb	r3, [r7, #31]
				break;
 8000720:	e01c      	b.n	800075c <GPIO_Init+0x204>
			case GPIOF_BASEADDR:
				portCode = 5;
 8000722:	2305      	movs	r3, #5
 8000724:	77fb      	strb	r3, [r7, #31]
				break;
 8000726:	e019      	b.n	800075c <GPIO_Init+0x204>
			case GPIOG_BASEADDR:
				portCode = 6;
 8000728:	2306      	movs	r3, #6
 800072a:	77fb      	strb	r3, [r7, #31]
				break;
 800072c:	e016      	b.n	800075c <GPIO_Init+0x204>
			case GPIOH_BASEADDR:
				portCode = 7;
 800072e:	2307      	movs	r3, #7
 8000730:	77fb      	strb	r3, [r7, #31]
				break;
 8000732:	e013      	b.n	800075c <GPIO_Init+0x204>
 8000734:	40013c00 	.word	0x40013c00
 8000738:	40021c00 	.word	0x40021c00
 800073c:	40021800 	.word	0x40021800
 8000740:	40021400 	.word	0x40021400
 8000744:	40021000 	.word	0x40021000
 8000748:	40020c00 	.word	0x40020c00
 800074c:	40020800 	.word	0x40020800
 8000750:	40020000 	.word	0x40020000
 8000754:	40020400 	.word	0x40020400
			default:
				portCode = 0;
 8000758:	2300      	movs	r3, #0
 800075a:	77fb      	strb	r3, [r7, #31]
		}
		SYSCFG->EXTICR[temp1] &= ~(0xF << (temp2 * 4));
 800075c:	4a68      	ldr	r2, [pc, #416]	; (8000900 <GPIO_Init+0x3a8>)
 800075e:	7dfb      	ldrb	r3, [r7, #23]
 8000760:	3302      	adds	r3, #2
 8000762:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000766:	7dbb      	ldrb	r3, [r7, #22]
 8000768:	009b      	lsls	r3, r3, #2
 800076a:	210f      	movs	r1, #15
 800076c:	fa01 f303 	lsl.w	r3, r1, r3
 8000770:	43db      	mvns	r3, r3
 8000772:	4618      	mov	r0, r3
 8000774:	4962      	ldr	r1, [pc, #392]	; (8000900 <GPIO_Init+0x3a8>)
 8000776:	7dfb      	ldrb	r3, [r7, #23]
 8000778:	4002      	ands	r2, r0
 800077a:	3302      	adds	r3, #2
 800077c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		SYSCFG->EXTICR[temp1] |= (portCode << (temp2 * 4));
 8000780:	4a5f      	ldr	r2, [pc, #380]	; (8000900 <GPIO_Init+0x3a8>)
 8000782:	7dfb      	ldrb	r3, [r7, #23]
 8000784:	3302      	adds	r3, #2
 8000786:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800078a:	7ff9      	ldrb	r1, [r7, #31]
 800078c:	7dbb      	ldrb	r3, [r7, #22]
 800078e:	009b      	lsls	r3, r3, #2
 8000790:	fa01 f303 	lsl.w	r3, r1, r3
 8000794:	4618      	mov	r0, r3
 8000796:	495a      	ldr	r1, [pc, #360]	; (8000900 <GPIO_Init+0x3a8>)
 8000798:	7dfb      	ldrb	r3, [r7, #23]
 800079a:	4302      	orrs	r2, r0
 800079c:	3302      	adds	r3, #2
 800079e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

		// Configure GPIO port selection in SYSCFG_EXTICR
		SYSCFG_PCLK_EN();
 80007a2:	4b58      	ldr	r3, [pc, #352]	; (8000904 <GPIO_Init+0x3ac>)
 80007a4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80007a6:	4a57      	ldr	r2, [pc, #348]	; (8000904 <GPIO_Init+0x3ac>)
 80007a8:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80007ac:	6453      	str	r3, [r2, #68]	; 0x44

		// Enable EXTI interrupt delivery using IMR
		EXTI->IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80007ae:	687b      	ldr	r3, [r7, #4]
 80007b0:	791b      	ldrb	r3, [r3, #4]
 80007b2:	b2db      	uxtb	r3, r3
 80007b4:	461a      	mov	r2, r3
 80007b6:	2301      	movs	r3, #1
 80007b8:	fa03 f202 	lsl.w	r2, r3, r2
 80007bc:	4b52      	ldr	r3, [pc, #328]	; (8000908 <GPIO_Init+0x3b0>)
 80007be:	681b      	ldr	r3, [r3, #0]
 80007c0:	4611      	mov	r1, r2
 80007c2:	4a51      	ldr	r2, [pc, #324]	; (8000908 <GPIO_Init+0x3b0>)
 80007c4:	430b      	orrs	r3, r1
 80007c6:	6013      	str	r3, [r2, #0]
	}

	// Configure GPIO output speed
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80007c8:	687b      	ldr	r3, [r7, #4]
 80007ca:	799b      	ldrb	r3, [r3, #6]
 80007cc:	b2db      	uxtb	r3, r3
 80007ce:	461a      	mov	r2, r3
 80007d0:	687b      	ldr	r3, [r7, #4]
 80007d2:	791b      	ldrb	r3, [r3, #4]
 80007d4:	b2db      	uxtb	r3, r3
 80007d6:	005b      	lsls	r3, r3, #1
 80007d8:	fa02 f303 	lsl.w	r3, r2, r3
 80007dc:	61bb      	str	r3, [r7, #24]
	pGPIOHandle->pGPIOx->OSPEEDER &= ~(0x3 << 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80007de:	687b      	ldr	r3, [r7, #4]
 80007e0:	791b      	ldrb	r3, [r3, #4]
 80007e2:	b2db      	uxtb	r3, r3
 80007e4:	005b      	lsls	r3, r3, #1
 80007e6:	2203      	movs	r2, #3
 80007e8:	fa02 f303 	lsl.w	r3, r2, r3
 80007ec:	43d9      	mvns	r1, r3
 80007ee:	687b      	ldr	r3, [r7, #4]
 80007f0:	681b      	ldr	r3, [r3, #0]
 80007f2:	689a      	ldr	r2, [r3, #8]
 80007f4:	400a      	ands	r2, r1
 80007f6:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDER |= temp;
 80007f8:	687b      	ldr	r3, [r7, #4]
 80007fa:	681b      	ldr	r3, [r3, #0]
 80007fc:	6899      	ldr	r1, [r3, #8]
 80007fe:	69ba      	ldr	r2, [r7, #24]
 8000800:	430a      	orrs	r2, r1
 8000802:	609a      	str	r2, [r3, #8]
	temp = 0;
 8000804:	2300      	movs	r3, #0
 8000806:	61bb      	str	r3, [r7, #24]

	// Configure GPIO pull up pull down
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000808:	687b      	ldr	r3, [r7, #4]
 800080a:	79db      	ldrb	r3, [r3, #7]
 800080c:	b2db      	uxtb	r3, r3
 800080e:	461a      	mov	r2, r3
 8000810:	687b      	ldr	r3, [r7, #4]
 8000812:	791b      	ldrb	r3, [r3, #4]
 8000814:	b2db      	uxtb	r3, r3
 8000816:	005b      	lsls	r3, r3, #1
 8000818:	fa02 f303 	lsl.w	r3, r2, r3
 800081c:	61bb      	str	r3, [r7, #24]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800081e:	687b      	ldr	r3, [r7, #4]
 8000820:	791b      	ldrb	r3, [r3, #4]
 8000822:	b2db      	uxtb	r3, r3
 8000824:	005b      	lsls	r3, r3, #1
 8000826:	2203      	movs	r2, #3
 8000828:	fa02 f303 	lsl.w	r3, r2, r3
 800082c:	43d9      	mvns	r1, r3
 800082e:	687b      	ldr	r3, [r7, #4]
 8000830:	681b      	ldr	r3, [r3, #0]
 8000832:	68da      	ldr	r2, [r3, #12]
 8000834:	400a      	ands	r2, r1
 8000836:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000838:	687b      	ldr	r3, [r7, #4]
 800083a:	681b      	ldr	r3, [r3, #0]
 800083c:	68d9      	ldr	r1, [r3, #12]
 800083e:	69ba      	ldr	r2, [r7, #24]
 8000840:	430a      	orrs	r2, r1
 8000842:	60da      	str	r2, [r3, #12]
	temp = 0;
 8000844:	2300      	movs	r3, #0
 8000846:	61bb      	str	r3, [r7, #24]

	// Configure GPIO output type
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000848:	687b      	ldr	r3, [r7, #4]
 800084a:	7a1b      	ldrb	r3, [r3, #8]
 800084c:	b2db      	uxtb	r3, r3
 800084e:	461a      	mov	r2, r3
 8000850:	687b      	ldr	r3, [r7, #4]
 8000852:	791b      	ldrb	r3, [r3, #4]
 8000854:	b2db      	uxtb	r3, r3
 8000856:	fa02 f303 	lsl.w	r3, r2, r3
 800085a:	61bb      	str	r3, [r7, #24]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800085c:	687b      	ldr	r3, [r7, #4]
 800085e:	791b      	ldrb	r3, [r3, #4]
 8000860:	b2db      	uxtb	r3, r3
 8000862:	461a      	mov	r2, r3
 8000864:	2301      	movs	r3, #1
 8000866:	4093      	lsls	r3, r2
 8000868:	43d9      	mvns	r1, r3
 800086a:	687b      	ldr	r3, [r7, #4]
 800086c:	681b      	ldr	r3, [r3, #0]
 800086e:	685a      	ldr	r2, [r3, #4]
 8000870:	400a      	ands	r2, r1
 8000872:	605a      	str	r2, [r3, #4]

	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000874:	687b      	ldr	r3, [r7, #4]
 8000876:	681b      	ldr	r3, [r3, #0]
 8000878:	6859      	ldr	r1, [r3, #4]
 800087a:	69ba      	ldr	r2, [r7, #24]
 800087c:	430a      	orrs	r2, r1
 800087e:	605a      	str	r2, [r3, #4]
	temp = 0;
 8000880:	2300      	movs	r3, #0
 8000882:	61bb      	str	r3, [r7, #24]

	// Configure GPIO alt functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 8000884:	687b      	ldr	r3, [r7, #4]
 8000886:	795b      	ldrb	r3, [r3, #5]
 8000888:	b2db      	uxtb	r3, r3
 800088a:	2b02      	cmp	r3, #2
 800088c:	d133      	bne.n	80008f6 <GPIO_Init+0x39e>
	{
		uint8_t temp1, temp2;

		temp1 = (int) pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 800088e:	687b      	ldr	r3, [r7, #4]
 8000890:	791b      	ldrb	r3, [r3, #4]
 8000892:	b2db      	uxtb	r3, r3
 8000894:	08db      	lsrs	r3, r3, #3
 8000896:	73fb      	strb	r3, [r7, #15]
		temp2 = (int) pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 8000898:	687b      	ldr	r3, [r7, #4]
 800089a:	791b      	ldrb	r3, [r3, #4]
 800089c:	b2db      	uxtb	r3, r3
 800089e:	f003 0307 	and.w	r3, r3, #7
 80008a2:	73bb      	strb	r3, [r7, #14]

		temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2);
 80008a4:	687b      	ldr	r3, [r7, #4]
 80008a6:	7a5b      	ldrb	r3, [r3, #9]
 80008a8:	b2db      	uxtb	r3, r3
 80008aa:	461a      	mov	r2, r3
 80008ac:	7bbb      	ldrb	r3, [r7, #14]
 80008ae:	009b      	lsls	r3, r3, #2
 80008b0:	fa02 f303 	lsl.w	r3, r2, r3
 80008b4:	61bb      	str	r3, [r7, #24]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << 4 * temp2);
 80008b6:	687b      	ldr	r3, [r7, #4]
 80008b8:	681b      	ldr	r3, [r3, #0]
 80008ba:	7bfa      	ldrb	r2, [r7, #15]
 80008bc:	3208      	adds	r2, #8
 80008be:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80008c2:	7bba      	ldrb	r2, [r7, #14]
 80008c4:	0092      	lsls	r2, r2, #2
 80008c6:	200f      	movs	r0, #15
 80008c8:	fa00 f202 	lsl.w	r2, r0, r2
 80008cc:	43d2      	mvns	r2, r2
 80008ce:	4610      	mov	r0, r2
 80008d0:	7bfa      	ldrb	r2, [r7, #15]
 80008d2:	4001      	ands	r1, r0
 80008d4:	3208      	adds	r2, #8
 80008d6:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= temp;
 80008da:	687b      	ldr	r3, [r7, #4]
 80008dc:	681b      	ldr	r3, [r3, #0]
 80008de:	7bfa      	ldrb	r2, [r7, #15]
 80008e0:	3208      	adds	r2, #8
 80008e2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80008e6:	7bfa      	ldrb	r2, [r7, #15]
 80008e8:	69b9      	ldr	r1, [r7, #24]
 80008ea:	4301      	orrs	r1, r0
 80008ec:	3208      	adds	r2, #8
 80008ee:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		temp = 0;
 80008f2:	2300      	movs	r3, #0
 80008f4:	61bb      	str	r3, [r7, #24]
	}

}
 80008f6:	bf00      	nop
 80008f8:	3720      	adds	r7, #32
 80008fa:	46bd      	mov	sp, r7
 80008fc:	bd80      	pop	{r7, pc}
 80008fe:	bf00      	nop
 8000900:	40013800 	.word	0x40013800
 8000904:	40023800 	.word	0x40023800
 8000908:	40013c00 	.word	0x40013c00

0800090c <SPI_GetFlagStatus>:
 * @return								-
 *
 * @Note								-
 */
uint8_t SPI_GetFlagStatus(SPI_Handle_t __vo *const pSPIHandle, uint32_t FlagName)
{
 800090c:	b480      	push	{r7}
 800090e:	b083      	sub	sp, #12
 8000910:	af00      	add	r7, sp, #0
 8000912:	6078      	str	r0, [r7, #4]
 8000914:	6039      	str	r1, [r7, #0]
	if ((pSPIHandle->pSPIx->SR >> FlagName) & 1)
 8000916:	687b      	ldr	r3, [r7, #4]
 8000918:	681b      	ldr	r3, [r3, #0]
 800091a:	689a      	ldr	r2, [r3, #8]
 800091c:	683b      	ldr	r3, [r7, #0]
 800091e:	fa22 f303 	lsr.w	r3, r2, r3
 8000922:	f003 0301 	and.w	r3, r3, #1
 8000926:	2b00      	cmp	r3, #0
 8000928:	d001      	beq.n	800092e <SPI_GetFlagStatus+0x22>
		return FLAG_SET;
 800092a:	2301      	movs	r3, #1
 800092c:	e000      	b.n	8000930 <SPI_GetFlagStatus+0x24>
	return FLAG_RESET;
 800092e:	2300      	movs	r3, #0
}
 8000930:	4618      	mov	r0, r3
 8000932:	370c      	adds	r7, #12
 8000934:	46bd      	mov	sp, r7
 8000936:	f85d 7b04 	ldr.w	r7, [sp], #4
 800093a:	4770      	bx	lr

0800093c <SPI_PeriClockControl>:
 * @return								- void
 *
 * @Note								-
 */
void SPI_PeriClockControl(SPI_Handle_t __vo *const pSPIHandle, uint8_t const EnorDi)
{
 800093c:	b480      	push	{r7}
 800093e:	b085      	sub	sp, #20
 8000940:	af00      	add	r7, sp, #0
 8000942:	6078      	str	r0, [r7, #4]
 8000944:	460b      	mov	r3, r1
 8000946:	70fb      	strb	r3, [r7, #3]
	intptr_t spiBaseAddr = (intptr_t) (pSPIHandle->pSPIx);
 8000948:	687b      	ldr	r3, [r7, #4]
 800094a:	681b      	ldr	r3, [r3, #0]
 800094c:	60fb      	str	r3, [r7, #12]
	if(EnorDi)
 800094e:	78fb      	ldrb	r3, [r7, #3]
 8000950:	2b00      	cmp	r3, #0
 8000952:	d034      	beq.n	80009be <SPI_PeriClockControl+0x82>
	{
		switch (spiBaseAddr)
 8000954:	68fb      	ldr	r3, [r7, #12]
 8000956:	4a37      	ldr	r2, [pc, #220]	; (8000a34 <SPI_PeriClockControl+0xf8>)
 8000958:	4293      	cmp	r3, r2
 800095a:	d029      	beq.n	80009b0 <SPI_PeriClockControl+0x74>
 800095c:	68fb      	ldr	r3, [r7, #12]
 800095e:	4a35      	ldr	r2, [pc, #212]	; (8000a34 <SPI_PeriClockControl+0xf8>)
 8000960:	4293      	cmp	r3, r2
 8000962:	dc61      	bgt.n	8000a28 <SPI_PeriClockControl+0xec>
 8000964:	68fb      	ldr	r3, [r7, #12]
 8000966:	4a34      	ldr	r2, [pc, #208]	; (8000a38 <SPI_PeriClockControl+0xfc>)
 8000968:	4293      	cmp	r3, r2
 800096a:	d00c      	beq.n	8000986 <SPI_PeriClockControl+0x4a>
 800096c:	68fb      	ldr	r3, [r7, #12]
 800096e:	4a32      	ldr	r2, [pc, #200]	; (8000a38 <SPI_PeriClockControl+0xfc>)
 8000970:	4293      	cmp	r3, r2
 8000972:	dc59      	bgt.n	8000a28 <SPI_PeriClockControl+0xec>
 8000974:	68fb      	ldr	r3, [r7, #12]
 8000976:	4a31      	ldr	r2, [pc, #196]	; (8000a3c <SPI_PeriClockControl+0x100>)
 8000978:	4293      	cmp	r3, r2
 800097a:	d00b      	beq.n	8000994 <SPI_PeriClockControl+0x58>
 800097c:	68fb      	ldr	r3, [r7, #12]
 800097e:	4a30      	ldr	r2, [pc, #192]	; (8000a40 <SPI_PeriClockControl+0x104>)
 8000980:	4293      	cmp	r3, r2
 8000982:	d00e      	beq.n	80009a2 <SPI_PeriClockControl+0x66>
				SPI4_PCLK_DI();
				break;
		}
	}

}
 8000984:	e050      	b.n	8000a28 <SPI_PeriClockControl+0xec>
				SPI1_PCLK_EN();
 8000986:	4b2f      	ldr	r3, [pc, #188]	; (8000a44 <SPI_PeriClockControl+0x108>)
 8000988:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800098a:	4a2e      	ldr	r2, [pc, #184]	; (8000a44 <SPI_PeriClockControl+0x108>)
 800098c:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000990:	6453      	str	r3, [r2, #68]	; 0x44
				break;
 8000992:	e049      	b.n	8000a28 <SPI_PeriClockControl+0xec>
				SPI2_PCLK_EN();
 8000994:	4b2b      	ldr	r3, [pc, #172]	; (8000a44 <SPI_PeriClockControl+0x108>)
 8000996:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000998:	4a2a      	ldr	r2, [pc, #168]	; (8000a44 <SPI_PeriClockControl+0x108>)
 800099a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800099e:	6413      	str	r3, [r2, #64]	; 0x40
				break;
 80009a0:	e042      	b.n	8000a28 <SPI_PeriClockControl+0xec>
				SPI3_PCLK_EN();
 80009a2:	4b28      	ldr	r3, [pc, #160]	; (8000a44 <SPI_PeriClockControl+0x108>)
 80009a4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80009a6:	4a27      	ldr	r2, [pc, #156]	; (8000a44 <SPI_PeriClockControl+0x108>)
 80009a8:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80009ac:	6413      	str	r3, [r2, #64]	; 0x40
				break;
 80009ae:	e03b      	b.n	8000a28 <SPI_PeriClockControl+0xec>
				SPI4_PCLK_EN();
 80009b0:	4b24      	ldr	r3, [pc, #144]	; (8000a44 <SPI_PeriClockControl+0x108>)
 80009b2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80009b4:	4a23      	ldr	r2, [pc, #140]	; (8000a44 <SPI_PeriClockControl+0x108>)
 80009b6:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80009ba:	6453      	str	r3, [r2, #68]	; 0x44
				break;
 80009bc:	e034      	b.n	8000a28 <SPI_PeriClockControl+0xec>
		switch (spiBaseAddr)
 80009be:	68fb      	ldr	r3, [r7, #12]
 80009c0:	4a1c      	ldr	r2, [pc, #112]	; (8000a34 <SPI_PeriClockControl+0xf8>)
 80009c2:	4293      	cmp	r3, r2
 80009c4:	d029      	beq.n	8000a1a <SPI_PeriClockControl+0xde>
 80009c6:	68fb      	ldr	r3, [r7, #12]
 80009c8:	4a1a      	ldr	r2, [pc, #104]	; (8000a34 <SPI_PeriClockControl+0xf8>)
 80009ca:	4293      	cmp	r3, r2
 80009cc:	dc2c      	bgt.n	8000a28 <SPI_PeriClockControl+0xec>
 80009ce:	68fb      	ldr	r3, [r7, #12]
 80009d0:	4a19      	ldr	r2, [pc, #100]	; (8000a38 <SPI_PeriClockControl+0xfc>)
 80009d2:	4293      	cmp	r3, r2
 80009d4:	d00c      	beq.n	80009f0 <SPI_PeriClockControl+0xb4>
 80009d6:	68fb      	ldr	r3, [r7, #12]
 80009d8:	4a17      	ldr	r2, [pc, #92]	; (8000a38 <SPI_PeriClockControl+0xfc>)
 80009da:	4293      	cmp	r3, r2
 80009dc:	dc24      	bgt.n	8000a28 <SPI_PeriClockControl+0xec>
 80009de:	68fb      	ldr	r3, [r7, #12]
 80009e0:	4a16      	ldr	r2, [pc, #88]	; (8000a3c <SPI_PeriClockControl+0x100>)
 80009e2:	4293      	cmp	r3, r2
 80009e4:	d00b      	beq.n	80009fe <SPI_PeriClockControl+0xc2>
 80009e6:	68fb      	ldr	r3, [r7, #12]
 80009e8:	4a15      	ldr	r2, [pc, #84]	; (8000a40 <SPI_PeriClockControl+0x104>)
 80009ea:	4293      	cmp	r3, r2
 80009ec:	d00e      	beq.n	8000a0c <SPI_PeriClockControl+0xd0>
}
 80009ee:	e01b      	b.n	8000a28 <SPI_PeriClockControl+0xec>
				SPI1_PCLK_DI();
 80009f0:	4b14      	ldr	r3, [pc, #80]	; (8000a44 <SPI_PeriClockControl+0x108>)
 80009f2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80009f4:	4a13      	ldr	r2, [pc, #76]	; (8000a44 <SPI_PeriClockControl+0x108>)
 80009f6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80009fa:	6453      	str	r3, [r2, #68]	; 0x44
				break;
 80009fc:	e014      	b.n	8000a28 <SPI_PeriClockControl+0xec>
				SPI2_PCLK_DI();
 80009fe:	4b11      	ldr	r3, [pc, #68]	; (8000a44 <SPI_PeriClockControl+0x108>)
 8000a00:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000a02:	4a10      	ldr	r2, [pc, #64]	; (8000a44 <SPI_PeriClockControl+0x108>)
 8000a04:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8000a08:	6413      	str	r3, [r2, #64]	; 0x40
				break;
 8000a0a:	e00d      	b.n	8000a28 <SPI_PeriClockControl+0xec>
				SPI3_PCLK_DI();
 8000a0c:	4b0d      	ldr	r3, [pc, #52]	; (8000a44 <SPI_PeriClockControl+0x108>)
 8000a0e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000a10:	4a0c      	ldr	r2, [pc, #48]	; (8000a44 <SPI_PeriClockControl+0x108>)
 8000a12:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8000a16:	6413      	str	r3, [r2, #64]	; 0x40
				break;
 8000a18:	e006      	b.n	8000a28 <SPI_PeriClockControl+0xec>
				SPI4_PCLK_DI();
 8000a1a:	4b0a      	ldr	r3, [pc, #40]	; (8000a44 <SPI_PeriClockControl+0x108>)
 8000a1c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000a1e:	4a09      	ldr	r2, [pc, #36]	; (8000a44 <SPI_PeriClockControl+0x108>)
 8000a20:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8000a24:	6453      	str	r3, [r2, #68]	; 0x44
				break;
 8000a26:	bf00      	nop
}
 8000a28:	bf00      	nop
 8000a2a:	3714      	adds	r7, #20
 8000a2c:	46bd      	mov	sp, r7
 8000a2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a32:	4770      	bx	lr
 8000a34:	40013400 	.word	0x40013400
 8000a38:	40013000 	.word	0x40013000
 8000a3c:	40003800 	.word	0x40003800
 8000a40:	40003c00 	.word	0x40003c00
 8000a44:	40023800 	.word	0x40023800

08000a48 <SPI_Init>:
 * @return								- void
 *
 * @Note								-
 */
void SPI_Init(SPI_Handle_t __vo *const pSPIHandle)
{
 8000a48:	b580      	push	{r7, lr}
 8000a4a:	b084      	sub	sp, #16
 8000a4c:	af00      	add	r7, sp, #0
 8000a4e:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0;
 8000a50:	2300      	movs	r3, #0
 8000a52:	60fb      	str	r3, [r7, #12]

	//1. Enable SPI peripheral clock
	SPI_PeriClockControl(pSPIHandle, ENABLE);
 8000a54:	2101      	movs	r1, #1
 8000a56:	6878      	ldr	r0, [r7, #4]
 8000a58:	f7ff ff70 	bl	800093c <SPI_PeriClockControl>

	//2. Configure SPI mode (master?slave?)
	temp |= pSPIHandle->SPIConfig.SPI_DeviceMode << SPI_CR1_MSTR;
 8000a5c:	687b      	ldr	r3, [r7, #4]
 8000a5e:	791b      	ldrb	r3, [r3, #4]
 8000a60:	b2db      	uxtb	r3, r3
 8000a62:	009b      	lsls	r3, r3, #2
 8000a64:	461a      	mov	r2, r3
 8000a66:	68fb      	ldr	r3, [r7, #12]
 8000a68:	4313      	orrs	r3, r2
 8000a6a:	60fb      	str	r3, [r7, #12]


	//2. SPI bus config.
	switch(pSPIHandle->SPIConfig.SPI_BusConfig)
 8000a6c:	687b      	ldr	r3, [r7, #4]
 8000a6e:	795b      	ldrb	r3, [r3, #5]
 8000a70:	b2db      	uxtb	r3, r3
 8000a72:	2b03      	cmp	r3, #3
 8000a74:	d010      	beq.n	8000a98 <SPI_Init+0x50>
 8000a76:	2b03      	cmp	r3, #3
 8000a78:	dc17      	bgt.n	8000aaa <SPI_Init+0x62>
 8000a7a:	2b01      	cmp	r3, #1
 8000a7c:	d002      	beq.n	8000a84 <SPI_Init+0x3c>
 8000a7e:	2b02      	cmp	r3, #2
 8000a80:	d005      	beq.n	8000a8e <SPI_Init+0x46>
 8000a82:	e012      	b.n	8000aaa <SPI_Init+0x62>
	{
		case SPI_BUSCFG_FD:
			// BIDIMODE must be RESET
			temp &= ~(1 << SPI_CR1_BIDIMODE);
 8000a84:	68fb      	ldr	r3, [r7, #12]
 8000a86:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8000a8a:	60fb      	str	r3, [r7, #12]
			break;
 8000a8c:	e011      	b.n	8000ab2 <SPI_Init+0x6a>

		case SPI_BUSCFG_HD:
			// BIDIMODE must be SET
			temp |= (1 << SPI_CR1_BIDIMODE);
 8000a8e:	68fb      	ldr	r3, [r7, #12]
 8000a90:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000a94:	60fb      	str	r3, [r7, #12]
			break;
 8000a96:	e00c      	b.n	8000ab2 <SPI_Init+0x6a>

		case SPI_BUSCFG_SMPLX_RX:
			// BIDIMODE must be RESET
			temp &= ~(1 << SPI_CR1_BIDIMODE);
 8000a98:	68fb      	ldr	r3, [r7, #12]
 8000a9a:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8000a9e:	60fb      	str	r3, [r7, #12]
			// RXONLY bit must be SET
			temp |= (1 << SPI_CR1_RXONLY);
 8000aa0:	68fb      	ldr	r3, [r7, #12]
 8000aa2:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000aa6:	60fb      	str	r3, [r7, #12]
			break;
 8000aa8:	e003      	b.n	8000ab2 <SPI_Init+0x6a>

		default:
			// SPI_BUSCFG_FD
			temp &= ~(1 << SPI_CR1_BIDIMODE);
 8000aaa:	68fb      	ldr	r3, [r7, #12]
 8000aac:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8000ab0:	60fb      	str	r3, [r7, #12]
	}
	//5. SPI Baud Rate config
	temp |= pSPIHandle->SPIConfig.SPI_SclkSpeed << SPI_CR1_BR;
 8000ab2:	687b      	ldr	r3, [r7, #4]
 8000ab4:	799b      	ldrb	r3, [r3, #6]
 8000ab6:	b2db      	uxtb	r3, r3
 8000ab8:	00db      	lsls	r3, r3, #3
 8000aba:	461a      	mov	r2, r3
 8000abc:	68fb      	ldr	r3, [r7, #12]
 8000abe:	4313      	orrs	r3, r2
 8000ac0:	60fb      	str	r3, [r7, #12]

	//4. SPI Data Frame Format config
	temp |= pSPIHandle->SPIConfig.SPI_DFF << SPI_CR1_DFF;
 8000ac2:	687b      	ldr	r3, [r7, #4]
 8000ac4:	79db      	ldrb	r3, [r3, #7]
 8000ac6:	b2db      	uxtb	r3, r3
 8000ac8:	02db      	lsls	r3, r3, #11
 8000aca:	461a      	mov	r2, r3
 8000acc:	68fb      	ldr	r3, [r7, #12]
 8000ace:	4313      	orrs	r3, r2
 8000ad0:	60fb      	str	r3, [r7, #12]

	//5. SPI ClockPhase config
	temp |= pSPIHandle->SPIConfig.SPI_CPHA << SPI_CR1_CPHA;
 8000ad2:	687b      	ldr	r3, [r7, #4]
 8000ad4:	7a1b      	ldrb	r3, [r3, #8]
 8000ad6:	b2db      	uxtb	r3, r3
 8000ad8:	461a      	mov	r2, r3
 8000ada:	68fb      	ldr	r3, [r7, #12]
 8000adc:	4313      	orrs	r3, r2
 8000ade:	60fb      	str	r3, [r7, #12]

	//6. SPI ClockPolarity config
	temp |= pSPIHandle->SPIConfig.SPI_CPOL << SPI_CR1_CPOL;
 8000ae0:	687b      	ldr	r3, [r7, #4]
 8000ae2:	7a5b      	ldrb	r3, [r3, #9]
 8000ae4:	b2db      	uxtb	r3, r3
 8000ae6:	005b      	lsls	r3, r3, #1
 8000ae8:	461a      	mov	r2, r3
 8000aea:	68fb      	ldr	r3, [r7, #12]
 8000aec:	4313      	orrs	r3, r2
 8000aee:	60fb      	str	r3, [r7, #12]

	//7. SPI Software Slave Management config
	temp |= pSPIHandle->SPIConfig.SPI_SSM << SPI_CR1_SSM;
 8000af0:	687b      	ldr	r3, [r7, #4]
 8000af2:	7a9b      	ldrb	r3, [r3, #10]
 8000af4:	b2db      	uxtb	r3, r3
 8000af6:	025b      	lsls	r3, r3, #9
 8000af8:	461a      	mov	r2, r3
 8000afa:	68fb      	ldr	r3, [r7, #12]
 8000afc:	4313      	orrs	r3, r2
 8000afe:	60fb      	str	r3, [r7, #12]

	pSPIHandle->pSPIx->CR1 |= temp;
 8000b00:	687b      	ldr	r3, [r7, #4]
 8000b02:	681b      	ldr	r3, [r3, #0]
 8000b04:	6819      	ldr	r1, [r3, #0]
 8000b06:	68fa      	ldr	r2, [r7, #12]
 8000b08:	430a      	orrs	r2, r1
 8000b0a:	601a      	str	r2, [r3, #0]
}
 8000b0c:	bf00      	nop
 8000b0e:	3710      	adds	r7, #16
 8000b10:	46bd      	mov	sp, r7
 8000b12:	bd80      	pop	{r7, pc}

08000b14 <SPI_DeInit>:
 * @return								- void
 *
 * @Note								-
 */
void SPI_DeInit(SPI_Handle_t __vo *const pSPIHandle)
{
 8000b14:	b480      	push	{r7}
 8000b16:	b085      	sub	sp, #20
 8000b18:	af00      	add	r7, sp, #0
 8000b1a:	6078      	str	r0, [r7, #4]
	intptr_t spiBaseAddr = (intptr_t) (pSPIHandle->pSPIx);
 8000b1c:	687b      	ldr	r3, [r7, #4]
 8000b1e:	681b      	ldr	r3, [r3, #0]
 8000b20:	60fb      	str	r3, [r7, #12]

	switch (spiBaseAddr)
 8000b22:	68fb      	ldr	r3, [r7, #12]
 8000b24:	4a28      	ldr	r2, [pc, #160]	; (8000bc8 <SPI_DeInit+0xb4>)
 8000b26:	4293      	cmp	r3, r2
 8000b28:	d03b      	beq.n	8000ba2 <SPI_DeInit+0x8e>
 8000b2a:	68fb      	ldr	r3, [r7, #12]
 8000b2c:	4a26      	ldr	r2, [pc, #152]	; (8000bc8 <SPI_DeInit+0xb4>)
 8000b2e:	4293      	cmp	r3, r2
 8000b30:	dc44      	bgt.n	8000bbc <SPI_DeInit+0xa8>
 8000b32:	68fb      	ldr	r3, [r7, #12]
 8000b34:	4a25      	ldr	r2, [pc, #148]	; (8000bcc <SPI_DeInit+0xb8>)
 8000b36:	4293      	cmp	r3, r2
 8000b38:	d00c      	beq.n	8000b54 <SPI_DeInit+0x40>
 8000b3a:	68fb      	ldr	r3, [r7, #12]
 8000b3c:	4a23      	ldr	r2, [pc, #140]	; (8000bcc <SPI_DeInit+0xb8>)
 8000b3e:	4293      	cmp	r3, r2
 8000b40:	dc3c      	bgt.n	8000bbc <SPI_DeInit+0xa8>
 8000b42:	68fb      	ldr	r3, [r7, #12]
 8000b44:	4a22      	ldr	r2, [pc, #136]	; (8000bd0 <SPI_DeInit+0xbc>)
 8000b46:	4293      	cmp	r3, r2
 8000b48:	d011      	beq.n	8000b6e <SPI_DeInit+0x5a>
 8000b4a:	68fb      	ldr	r3, [r7, #12]
 8000b4c:	4a21      	ldr	r2, [pc, #132]	; (8000bd4 <SPI_DeInit+0xc0>)
 8000b4e:	4293      	cmp	r3, r2
 8000b50:	d01a      	beq.n	8000b88 <SPI_DeInit+0x74>

		case SPI4_BASEADDR:
			SPI4_REG_RESET();
			break;
	}
}
 8000b52:	e033      	b.n	8000bbc <SPI_DeInit+0xa8>
			SPI1_REG_RESET();
 8000b54:	4b20      	ldr	r3, [pc, #128]	; (8000bd8 <SPI_DeInit+0xc4>)
 8000b56:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000b58:	4a1f      	ldr	r2, [pc, #124]	; (8000bd8 <SPI_DeInit+0xc4>)
 8000b5a:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000b5e:	6253      	str	r3, [r2, #36]	; 0x24
 8000b60:	4b1d      	ldr	r3, [pc, #116]	; (8000bd8 <SPI_DeInit+0xc4>)
 8000b62:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000b64:	4a1c      	ldr	r2, [pc, #112]	; (8000bd8 <SPI_DeInit+0xc4>)
 8000b66:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000b6a:	6253      	str	r3, [r2, #36]	; 0x24
			break;
 8000b6c:	e026      	b.n	8000bbc <SPI_DeInit+0xa8>
			SPI2_REG_RESET();
 8000b6e:	4b1a      	ldr	r3, [pc, #104]	; (8000bd8 <SPI_DeInit+0xc4>)
 8000b70:	6a1b      	ldr	r3, [r3, #32]
 8000b72:	4a19      	ldr	r2, [pc, #100]	; (8000bd8 <SPI_DeInit+0xc4>)
 8000b74:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000b78:	6213      	str	r3, [r2, #32]
 8000b7a:	4b17      	ldr	r3, [pc, #92]	; (8000bd8 <SPI_DeInit+0xc4>)
 8000b7c:	6a1b      	ldr	r3, [r3, #32]
 8000b7e:	4a16      	ldr	r2, [pc, #88]	; (8000bd8 <SPI_DeInit+0xc4>)
 8000b80:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8000b84:	6213      	str	r3, [r2, #32]
			break;
 8000b86:	e019      	b.n	8000bbc <SPI_DeInit+0xa8>
			SPI3_REG_RESET();
 8000b88:	4b13      	ldr	r3, [pc, #76]	; (8000bd8 <SPI_DeInit+0xc4>)
 8000b8a:	6a1b      	ldr	r3, [r3, #32]
 8000b8c:	4a12      	ldr	r2, [pc, #72]	; (8000bd8 <SPI_DeInit+0xc4>)
 8000b8e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000b92:	6213      	str	r3, [r2, #32]
 8000b94:	4b10      	ldr	r3, [pc, #64]	; (8000bd8 <SPI_DeInit+0xc4>)
 8000b96:	6a1b      	ldr	r3, [r3, #32]
 8000b98:	4a0f      	ldr	r2, [pc, #60]	; (8000bd8 <SPI_DeInit+0xc4>)
 8000b9a:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8000b9e:	6213      	str	r3, [r2, #32]
			break;
 8000ba0:	e00c      	b.n	8000bbc <SPI_DeInit+0xa8>
			SPI4_REG_RESET();
 8000ba2:	4b0d      	ldr	r3, [pc, #52]	; (8000bd8 <SPI_DeInit+0xc4>)
 8000ba4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000ba6:	4a0c      	ldr	r2, [pc, #48]	; (8000bd8 <SPI_DeInit+0xc4>)
 8000ba8:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000bac:	6253      	str	r3, [r2, #36]	; 0x24
 8000bae:	4b0a      	ldr	r3, [pc, #40]	; (8000bd8 <SPI_DeInit+0xc4>)
 8000bb0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000bb2:	4a09      	ldr	r2, [pc, #36]	; (8000bd8 <SPI_DeInit+0xc4>)
 8000bb4:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000bb8:	6253      	str	r3, [r2, #36]	; 0x24
			break;
 8000bba:	bf00      	nop
}
 8000bbc:	bf00      	nop
 8000bbe:	3714      	adds	r7, #20
 8000bc0:	46bd      	mov	sp, r7
 8000bc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000bc6:	4770      	bx	lr
 8000bc8:	40013400 	.word	0x40013400
 8000bcc:	40013000 	.word	0x40013000
 8000bd0:	40003800 	.word	0x40003800
 8000bd4:	40003c00 	.word	0x40003c00
 8000bd8:	40023800 	.word	0x40023800

08000bdc <SPI_SendData>:
 * @return								- void
 *
 * @Note								- Blocking (till all data of length LEN is sent)
 */
void SPI_SendData(SPI_Handle_t __vo *const pSPIHandle, uint8_t *pTxBuffer, uint32_t Len)
{
 8000bdc:	b580      	push	{r7, lr}
 8000bde:	b084      	sub	sp, #16
 8000be0:	af00      	add	r7, sp, #0
 8000be2:	60f8      	str	r0, [r7, #12]
 8000be4:	60b9      	str	r1, [r7, #8]
 8000be6:	607a      	str	r2, [r7, #4]
	// While length not zero, keep writing to txBuffer
	while(Len > 0)
 8000be8:	e026      	b.n	8000c38 <SPI_SendData+0x5c>
	{
		// While tX buffer not empty, wait (blocking)
		while(SPI_GetFlagStatus(pSPIHandle, SPI_TXE_FLAG) == FLAG_RESET);
 8000bea:	bf00      	nop
 8000bec:	2101      	movs	r1, #1
 8000bee:	68f8      	ldr	r0, [r7, #12]
 8000bf0:	f7ff fe8c 	bl	800090c <SPI_GetFlagStatus>
 8000bf4:	4603      	mov	r3, r0
 8000bf6:	2b00      	cmp	r3, #0
 8000bf8:	d0f8      	beq.n	8000bec <SPI_SendData+0x10>

		if(pSPIHandle->SPIConfig.SPI_DFF == SPI_DFF_16BITS)
 8000bfa:	68fb      	ldr	r3, [r7, #12]
 8000bfc:	79db      	ldrb	r3, [r3, #7]
 8000bfe:	b2db      	uxtb	r3, r3
 8000c00:	2b01      	cmp	r3, #1
 8000c02:	d10e      	bne.n	8000c22 <SPI_SendData+0x46>
		{
			pSPIHandle->pSPIx->DR = *(uint16_t*)pTxBuffer;
 8000c04:	68bb      	ldr	r3, [r7, #8]
 8000c06:	881a      	ldrh	r2, [r3, #0]
 8000c08:	68fb      	ldr	r3, [r7, #12]
 8000c0a:	681b      	ldr	r3, [r3, #0]
 8000c0c:	60da      	str	r2, [r3, #12]
			Len--;
 8000c0e:	687b      	ldr	r3, [r7, #4]
 8000c10:	3b01      	subs	r3, #1
 8000c12:	607b      	str	r3, [r7, #4]
			Len--;
 8000c14:	687b      	ldr	r3, [r7, #4]
 8000c16:	3b01      	subs	r3, #1
 8000c18:	607b      	str	r3, [r7, #4]
			(uint16_t*)pTxBuffer++;
 8000c1a:	68bb      	ldr	r3, [r7, #8]
 8000c1c:	3301      	adds	r3, #1
 8000c1e:	60bb      	str	r3, [r7, #8]
 8000c20:	e00a      	b.n	8000c38 <SPI_SendData+0x5c>

		} else {
			// else (DDF == 8BITS)
			pSPIHandle->pSPIx->DR = *pTxBuffer;
 8000c22:	68bb      	ldr	r3, [r7, #8]
 8000c24:	781a      	ldrb	r2, [r3, #0]
 8000c26:	68fb      	ldr	r3, [r7, #12]
 8000c28:	681b      	ldr	r3, [r3, #0]
 8000c2a:	60da      	str	r2, [r3, #12]
			Len--;
 8000c2c:	687b      	ldr	r3, [r7, #4]
 8000c2e:	3b01      	subs	r3, #1
 8000c30:	607b      	str	r3, [r7, #4]
			pTxBuffer++;
 8000c32:	68bb      	ldr	r3, [r7, #8]
 8000c34:	3301      	adds	r3, #1
 8000c36:	60bb      	str	r3, [r7, #8]
	while(Len > 0)
 8000c38:	687b      	ldr	r3, [r7, #4]
 8000c3a:	2b00      	cmp	r3, #0
 8000c3c:	d1d5      	bne.n	8000bea <SPI_SendData+0xe>
		}
	}
}
 8000c3e:	bf00      	nop
 8000c40:	bf00      	nop
 8000c42:	3710      	adds	r7, #16
 8000c44:	46bd      	mov	sp, r7
 8000c46:	bd80      	pop	{r7, pc}

08000c48 <SPI_PeripheralControl>:
 * @return								-
 *
 * @Note								-
 */
void SPI_PeripheralControl(SPI_Handle_t __vo *const pSPIHandle, uint8_t EnorDi)
{
 8000c48:	b480      	push	{r7}
 8000c4a:	b083      	sub	sp, #12
 8000c4c:	af00      	add	r7, sp, #0
 8000c4e:	6078      	str	r0, [r7, #4]
 8000c50:	460b      	mov	r3, r1
 8000c52:	70fb      	strb	r3, [r7, #3]
	if(EnorDi)
 8000c54:	78fb      	ldrb	r3, [r7, #3]
 8000c56:	2b00      	cmp	r3, #0
 8000c58:	d006      	beq.n	8000c68 <SPI_PeripheralControl+0x20>
	{
		pSPIHandle->pSPIx->CR1 |= (1 << SPI_CR1_SPE);
 8000c5a:	687b      	ldr	r3, [r7, #4]
 8000c5c:	681b      	ldr	r3, [r3, #0]
 8000c5e:	681a      	ldr	r2, [r3, #0]
 8000c60:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8000c64:	601a      	str	r2, [r3, #0]
	} else
	{
		pSPIHandle->pSPIx->CR1 &= ~(1 << SPI_CR1_SPE);
	}
}
 8000c66:	e005      	b.n	8000c74 <SPI_PeripheralControl+0x2c>
		pSPIHandle->pSPIx->CR1 &= ~(1 << SPI_CR1_SPE);
 8000c68:	687b      	ldr	r3, [r7, #4]
 8000c6a:	681b      	ldr	r3, [r3, #0]
 8000c6c:	681a      	ldr	r2, [r3, #0]
 8000c6e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8000c72:	601a      	str	r2, [r3, #0]
}
 8000c74:	bf00      	nop
 8000c76:	370c      	adds	r7, #12
 8000c78:	46bd      	mov	sp, r7
 8000c7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c7e:	4770      	bx	lr

08000c80 <SPI_SSIConfig>:
 * @return								-
 *
 * @Note								-
 */
void SPI_SSIConfig(SPI_Handle_t __vo *const pSPIHandle, uint8_t EnorDi)
{
 8000c80:	b480      	push	{r7}
 8000c82:	b083      	sub	sp, #12
 8000c84:	af00      	add	r7, sp, #0
 8000c86:	6078      	str	r0, [r7, #4]
 8000c88:	460b      	mov	r3, r1
 8000c8a:	70fb      	strb	r3, [r7, #3]
	if(EnorDi)
 8000c8c:	78fb      	ldrb	r3, [r7, #3]
 8000c8e:	2b00      	cmp	r3, #0
 8000c90:	d006      	beq.n	8000ca0 <SPI_SSIConfig+0x20>
	{
		pSPIHandle->pSPIx->CR1 |= (1 << SPI_CR1_SSI);
 8000c92:	687b      	ldr	r3, [r7, #4]
 8000c94:	681b      	ldr	r3, [r3, #0]
 8000c96:	681a      	ldr	r2, [r3, #0]
 8000c98:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8000c9c:	601a      	str	r2, [r3, #0]
	} else
	{
		pSPIHandle->pSPIx->CR1 &= ~(1 << SPI_CR1_SSI);
	}
}
 8000c9e:	e005      	b.n	8000cac <SPI_SSIConfig+0x2c>
		pSPIHandle->pSPIx->CR1 &= ~(1 << SPI_CR1_SSI);
 8000ca0:	687b      	ldr	r3, [r7, #4]
 8000ca2:	681b      	ldr	r3, [r3, #0]
 8000ca4:	681a      	ldr	r2, [r3, #0]
 8000ca6:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8000caa:	601a      	str	r2, [r3, #0]
}
 8000cac:	bf00      	nop
 8000cae:	370c      	adds	r7, #12
 8000cb0:	46bd      	mov	sp, r7
 8000cb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000cb6:	4770      	bx	lr

08000cb8 <__libc_init_array>:
 8000cb8:	b570      	push	{r4, r5, r6, lr}
 8000cba:	4d0d      	ldr	r5, [pc, #52]	; (8000cf0 <__libc_init_array+0x38>)
 8000cbc:	4c0d      	ldr	r4, [pc, #52]	; (8000cf4 <__libc_init_array+0x3c>)
 8000cbe:	1b64      	subs	r4, r4, r5
 8000cc0:	10a4      	asrs	r4, r4, #2
 8000cc2:	2600      	movs	r6, #0
 8000cc4:	42a6      	cmp	r6, r4
 8000cc6:	d109      	bne.n	8000cdc <__libc_init_array+0x24>
 8000cc8:	4d0b      	ldr	r5, [pc, #44]	; (8000cf8 <__libc_init_array+0x40>)
 8000cca:	4c0c      	ldr	r4, [pc, #48]	; (8000cfc <__libc_init_array+0x44>)
 8000ccc:	f000 f818 	bl	8000d00 <_init>
 8000cd0:	1b64      	subs	r4, r4, r5
 8000cd2:	10a4      	asrs	r4, r4, #2
 8000cd4:	2600      	movs	r6, #0
 8000cd6:	42a6      	cmp	r6, r4
 8000cd8:	d105      	bne.n	8000ce6 <__libc_init_array+0x2e>
 8000cda:	bd70      	pop	{r4, r5, r6, pc}
 8000cdc:	f855 3b04 	ldr.w	r3, [r5], #4
 8000ce0:	4798      	blx	r3
 8000ce2:	3601      	adds	r6, #1
 8000ce4:	e7ee      	b.n	8000cc4 <__libc_init_array+0xc>
 8000ce6:	f855 3b04 	ldr.w	r3, [r5], #4
 8000cea:	4798      	blx	r3
 8000cec:	3601      	adds	r6, #1
 8000cee:	e7f2      	b.n	8000cd6 <__libc_init_array+0x1e>
 8000cf0:	08000d24 	.word	0x08000d24
 8000cf4:	08000d24 	.word	0x08000d24
 8000cf8:	08000d24 	.word	0x08000d24
 8000cfc:	08000d28 	.word	0x08000d28

08000d00 <_init>:
 8000d00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d02:	bf00      	nop
 8000d04:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000d06:	bc08      	pop	{r3}
 8000d08:	469e      	mov	lr, r3
 8000d0a:	4770      	bx	lr

08000d0c <_fini>:
 8000d0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d0e:	bf00      	nop
 8000d10:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000d12:	bc08      	pop	{r3}
 8000d14:	469e      	mov	lr, r3
 8000d16:	4770      	bx	lr
